{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/marketmood/marketmood-frontend/src/components/StockData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockData = () => {\n  _s();\n  const [stockData, setStockData] = useState({});\n  const [symbol, setSymbol] = useState(\"TSLA\");\n  const [isLoading, setIsLoading] = useState(false); // Add this\n\n  useEffect(() => {\n    if (symbol) {\n      setIsLoading(true); // Set loading to true\n      axios.get(`http://127.0.0.1:5000/stocks?symbol=${symbol}`).then(response => {\n        setStockData(response.data);\n        setIsLoading(false); // Set loading to false after data is fetched\n      }).catch(error => {\n        console.error(\"Error fetching stock data:\", error);\n        setIsLoading(false); // Set loading to false on error\n      });\n    }\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: symbol,\n      onChange: e => setSymbol(e.target.value.toUpperCase()),\n      placeholder: \"Enter stock symbol (e.g., TSLA)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n      color: \"#123abc\",\n      loading: isLoading,\n      size: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : stockData.body ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Company Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), \" \", stockData.body.companyName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Exchange:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), \" \", stockData.body.exchange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Sale Price:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), \" \", stockData.body.primaryData.lastSalePrice]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Net Change:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), \" \", stockData.body.primaryData.netChange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Percent Change:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), \" \", stockData.body.primaryData.percentageChange]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No stock data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(StockData, \"jTZwv3pbdDHJzIbj13Km3gOYs5w=\");\n_c = StockData;\nexport default StockData;\nvar _c;\n$RefreshReg$(_c, \"StockData\");","map":{"version":3,"names":["React","useState","useEffect","axios","ClipLoader","jsxDEV","_jsxDEV","StockData","_s","stockData","setStockData","symbol","setSymbol","isLoading","setIsLoading","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toUpperCase","placeholder","color","loading","size","body","companyName","exchange","primaryData","lastSalePrice","netChange","percentageChange","_c","$RefreshReg$"],"sources":["/Users/ankit/marketmood/marketmood-frontend/src/components/StockData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nconst StockData = () => {\n  const [stockData, setStockData] = useState({});\n  const [symbol, setSymbol] = useState(\"TSLA\");\n  const [isLoading, setIsLoading] = useState(false); // Add this\n\n  useEffect(() => {\n    if (symbol) {\n      setIsLoading(true); // Set loading to true\n      axios\n        .get(`http://127.0.0.1:5000/stocks?symbol=${symbol}`)\n        .then((response) => {\n          setStockData(response.data);\n          setIsLoading(false); // Set loading to false after data is fetched\n        })\n        .catch((error) => {\n          console.error(\"Error fetching stock data:\", error);\n          setIsLoading(false); // Set loading to false on error\n        });\n    }\n  }, [symbol]);\n\n  return (\n    <div>\n      <h2>Stock Data</h2>\n      <input\n        type=\"text\"\n        value={symbol}\n        onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n        placeholder=\"Enter stock symbol (e.g., TSLA)\"\n      />\n      {isLoading ? (\n        <ClipLoader color=\"#123abc\" loading={isLoading} size={50} />\n      ) : stockData.body ? (\n        <ul>\n          <li><strong>Company Name:</strong> {stockData.body.companyName}</li>\n          <li><strong>Exchange:</strong> {stockData.body.exchange}</li>\n          <li><strong>Last Sale Price:</strong> {stockData.body.primaryData.lastSalePrice}</li>\n          <li><strong>Net Change:</strong> {stockData.body.primaryData.netChange}</li>\n          <li><strong>Percent Change:</strong> {stockData.body.primaryData.percentageChange}</li>\n        </ul>\n      ) : (\n        <p>No stock data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default StockData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}