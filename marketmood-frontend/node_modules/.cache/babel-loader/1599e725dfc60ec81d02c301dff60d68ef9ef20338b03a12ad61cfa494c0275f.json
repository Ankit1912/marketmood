{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/marketmood/marketmood-frontend/src/components/NewsData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsData = () => {\n  _s();\n  const [newsData, setNewsData] = useState([]);\n  const [symbol, setSymbol] = useState('TSLA');\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:5000/news?symbol=${symbol}`).then(response => setNewsData(response.data.articles)).catch(error => console.error('Error fetching news data:', error));\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"News Articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: symbol,\n      onChange: e => setSymbol(e.target.value.toUpperCase()),\n      placeholder: \"Enter stock symbol (e.g., TSLA)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: newsData.map((article, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: article.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), \" - Sentiment:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: article.sentiment === \"positive\" ? \"green\" : article.sentiment === \"negative\" ? \"red\" : \"gray\"\n          },\n          children: article.sentiment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsData, \"qYrAyPEJfIhw0dFPd2SctdvJ6cU=\");\n_c = NewsData;\nexport default NewsData;\nvar _c;\n$RefreshReg$(_c, \"NewsData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","NewsData","_s","newsData","setNewsData","symbol","setSymbol","get","then","response","data","articles","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toUpperCase","placeholder","map","article","index","style","marginBottom","title","color","sentiment","_c","$RefreshReg$"],"sources":["/Users/ankit/marketmood/marketmood-frontend/src/components/NewsData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst NewsData = () => {\n  const [newsData, setNewsData] = useState([]);\n  const [symbol, setSymbol] = useState('TSLA');\n\n  useEffect(() => {\n    axios\n      .get(`http://127.0.0.1:5000/news?symbol=${symbol}`)\n      .then((response) => setNewsData(response.data.articles))\n      .catch((error) => console.error('Error fetching news data:', error));\n  }, [symbol]);\n\n  return (\n    <div>\n      <h2>News Articles</h2>\n      <input\n        type=\"text\"\n        value={symbol}\n        onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n        placeholder=\"Enter stock symbol (e.g., TSLA)\"\n      />\n      <ul>\n        {newsData.map((article, index) => (\n          <li key={index} style={{ marginBottom: \"10px\" }}>\n            <strong>{article.title}</strong> - Sentiment:{\" \"}\n            <span\n              style={{\n                      color:\n                      article.sentiment === \"positive\"\n                      ? \"green\"\n                      : article.sentiment === \"negative\"\n                      ? \"red\"\n                      : \"gray\",\n                    }}\n              >\n                {article.sentiment}\n            </span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NewsData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFS,GAAG,CAAC,qCAAqCF,MAAM,EAAE,CAAC,CAClDG,IAAI,CAAEC,QAAQ,IAAKL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAACC,QAAQ,CAAC,CAAC,CACvDC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;EACxE,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBnB,OAAA;MACEoB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,MAAO;MACdiB,QAAQ,EAAGC,CAAC,IAAKjB,SAAS,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,CAAE;MACzDC,WAAW,EAAC;IAAiC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFnB,OAAA;MAAAe,QAAA,EACGZ,QAAQ,CAACwB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B7B,OAAA;QAAgB8B,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAO,CAAE;QAAAhB,QAAA,gBAC9Cf,OAAA;UAAAe,QAAA,EAASa,OAAO,CAACI;QAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,iBAAa,EAAC,GAAG,eACjDnB,OAAA;UACE8B,KAAK,EAAE;YACCG,KAAK,EACLL,OAAO,CAACM,SAAS,KAAK,UAAU,GAC9B,OAAO,GACPN,OAAO,CAACM,SAAS,KAAK,UAAU,GAChC,KAAK,GACL;UACJ,CAAE;UAAAnB,QAAA,EAELa,OAAO,CAACM;QAAS;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA,GAbAU,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}