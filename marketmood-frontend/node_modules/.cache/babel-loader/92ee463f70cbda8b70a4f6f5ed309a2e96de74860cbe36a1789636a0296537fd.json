{"ast":null,"code":"var _jsxFileName = \"/Users/ankit/marketmood/marketmood-frontend/src/components/StockData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockData = () => {\n  _s();\n  const [stockData, setStockData] = useState([]);\n  const [symbol, setSymbol] = useState('TSLA');\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:5000/stocks?symbol=${symbol}`).then(response => setStockData(response.data)).catch(error => console.error('Error fetching stock data:', error));\n  }, [symbol]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: symbol,\n      onChange: e => setSymbol(e.target.value.toUpperCase()),\n      placeholder: \"Enter stock symbol (e.g., TSLA)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(stockData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(StockData, \"I89PYdOLkBCH2ykSJNm29bz5eJQ=\");\n_c = StockData;\nexport default StockData;\nvar _c;\n$RefreshReg$(_c, \"StockData\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","StockData","_s","stockData","setStockData","symbol","setSymbol","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","toUpperCase","placeholder","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/ankit/marketmood/marketmood-frontend/src/components/StockData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst StockData = () => {\n  const [stockData, setStockData] = useState([]);\n  const [symbol, setSymbol] = useState('TSLA');\n\n  useEffect(() => {\n    axios\n      .get(`http://127.0.0.1:5000/stocks?symbol=${symbol}`)\n      .then((response) => setStockData(response.data))\n      .catch((error) => console.error('Error fetching stock data:', error));\n  }, [symbol]);\n\n  return (\n    <div>\n      <h2>Stock Data</h2>\n      <input\n        type=\"text\"\n        value={symbol}\n        onChange={(e) => setSymbol(e.target.value.toUpperCase())}\n        placeholder=\"Enter stock symbol (e.g., TSLA)\"\n      />\n      <pre>{JSON.stringify(stockData, null, 2)}</pre>\n    </div>\n  );\n};\n\nexport default StockData;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFS,GAAG,CAAC,uCAAuCF,MAAM,EAAE,CAAC,CACpDG,IAAI,CAAEC,QAAQ,IAAKL,YAAY,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC/CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEf,MAAO;MACdgB,QAAQ,EAAGC,CAAC,IAAKhB,SAAS,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,CAAE;MACzDC,WAAW,EAAC;IAAiC;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFlB,OAAA;MAAAc,QAAA,EAAMY,IAAI,CAACC,SAAS,CAACxB,SAAS,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAAChB,EAAA,CAvBID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}